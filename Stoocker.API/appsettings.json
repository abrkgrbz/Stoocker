{
  "ConnectionStrings": {
    "SqlConnection": "Data Source=DESKTOP-A1C2AO3;Database=Stoocker;Integrated Security=True;Connect Timeout=30;Encrypt=True;Trust Server Certificate=True;Application Intent=ReadWrite;Multi Subnet Failover=False",
    "HangfireConnection": "Data Source=DESKTOP-A1C2AO3;Database=Stoocker.Hangfire;Integrated Security=True;Connect Timeout=30;Encrypt=True;Trust Server Certificate=True;Application Intent=ReadWrite;Multi Subnet Failover=False",
    "RedisConnection": "localhost:6379,password=yourpassword,ssl=False,abortConnect=False,defaultDatabase=0"
  }, 
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "System": "Warning",
        "Microsoft.AspNetCore.Authentication": "Information",
        "Hangfire": "Information"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} {Properties:j}{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "logs/stoocker-.log",
          "rollingInterval": "Day",
          "fileSizeLimitBytes": 10485760,
          "retainedFileCountLimit": 30,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId", "WithProcessId" ],
    "Properties": {
      "Application": "Stoocker"
    }
  },
  "Logging": {
    "FilePath": "logs/stoocker-log.txt",
    "SeqUrl": "http://localhost:5342",
    "ElasticsearchUrl": ""
  },
  "Hangfire": {
    "Dashboard": {
      "Path": "/hangfire",
      "StatsPollingInterval": 10000
    },
    "Server": {
      "WorkerCount": 4,
      "Queues": [ "critical", "default", "low", "tenant-specific" ],
      "HeartbeatInterval": "00:01:00",
      "ServerCheckInterval": "00:01:00",
      "SchedulePollingInterval": "00:00:15"
    },
    "Storage": {
      "SchemaName": "Hangfire",
      "CommandBatchMaxTimeout": "00:05:00",
      "SlidingInvisibilityTimeout": "00:05:00",
      "QueuePollInterval": "00:00:00",
      "UseRecommendedIsolationLevel": true,
      "DisableGlobalLocks": true
    }
  },
  "HealthChecks": {
    "UI": {
      "HealthCheckDatabaseConnectionString": "Data Source=healthchecks.db",
      "EvaluationTimeInSeconds": 30,
      "MinimumSecondsBetweenFailureNotifications": 60,
      "MaximumHistoryEntriesPerEndpoint": 50
    },
    "Thresholds": {
      "DiskSpace": {
        "MinimumFreeBytes": 1073741824
      },
      "Memory": {
        "MinimumFreeBytes": 104857600
      },
      "CPU": {
        "MaximumUsagePercentage": 80
      }
    }
  },
  "Monitoring": {
    "HealthChecks": {
      "Enabled": true,
      "UI": {
        "Enabled": true,
        "Path": "/health-ui",
        "ApiPath": "/health-ui-api",
        "EvaluationTimeInSeconds": 30,
        "MinimumSecondsBetweenFailureNotifications": 60
      },
      "Endpoints": [
        {
          "Name": "Stoocker API",
          "Uri": "/health"
        }
      ]
    },
    "Prometheus": {
      "Enabled": true,
      "MetricsPath": "/metrics",
      "HistogramBuckets": [ 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10 ]
    },
    "OpenTelemetry": {
      "Enabled": true,
      "ServiceName": "Stoocker",
      "ServiceVersion": "1.0.0",
      "Exporters": {
        "Otlp": {
          "Enabled": true,
          "Endpoint": "http://localhost:4317",
          "Protocol": "grpc",
          "Headers": {}
        },
        "Prometheus": {
          "Enabled": true,
          "Port": 9464,
          "Path": "/metrics"
        },
        "Console": {
          "Enabled": false
        }
      },
      "Sampling": {
        "AlwaysOn": true,
        "Probability": 1.0
      },
      "Instrumentation": {
        "Http": {
          "RecordException": true,
          "SetHttpFlavor": true
        },
        "AspNetCore": {
          "RecordException": true
        }
      }
    },
    "Alerts": {
      "Email": {
        "Enabled": true,
        "SmtpServer": "smtp.gmail.com",
        "SmtpPort": 587,
        "UseSsl": true,
        "From": "alerts@stoocker.com",
        "FromDisplayName": "Stoocker Alerts",
        "To": [ "admin@stoocker.com" ],
        "Username": "anilberk199751@gmail.com",
        "Password": "tuzoiawczenykxuj" // Gmail için App Password kullanın
      },
      "Thresholds": {
        "CpuUsagePercent": 80,
        "MemoryUsagePercent": 85,
        "DiskSpaceMinimumGB": 1,
        "ResponseTimeMs": 1000,
        "ErrorRatePercent": 5
      }
    },
    "MetricsStorage": {
      "Type": "InMemory",
      "RetentionDays": 7
    }
  },
  "Jwt": {
    "SecretKey": "M7xqJ9K8vR3nF2wP5cA7dE9tG1hL6uY4bN8sX0zA3qW=",
    "Issuer": "Stoocker",
    "Audience": "Stoocker"
  },
  "CacheSettings": {
    "DefaultCacheDurationMinutes": 30,
    "EnableRedisCache": true,
    "EnableMemoryCache": true,
    "MemoryCacheSizeLimitMB": 1024,
    "CacheKeyPrefix": "Stoocker",
    "SlidingExpirationMinutes": 15,
    "AbsoluteExpirationMinutes": 60
  },
  "EmailSettings": {
    "Host": "smtp.gmail.com",
    "Port": 587,
    "EnableSsl": true,
    "UserName": "anilberk199751@gmail.com",
    "Password": "tuzoiawczenykxuj",
    "FromEmail": "anilberk199751@gmail.com",
    "FromName": "Stoocker"
  },
  "AllowedHosts": "*"
}
 